package Adderall.dev.command;

import java.util.List;
import java.util.Arrays;

import net.minecraft.command.ICommand;
import net.minecraft.command.ICommandSender;
import net.minecraftforge.client.ClientCommandHandler;

public class SCmd implements ICommand {
	final String name;
	final String usage;
	final List<String> aliases;
	final SCon consumer;
	final List<Integer> usernameIndices;
	
	public SCmd(String name, SCon consumer) {
		this(name, null, null, null, consumer);
	}
	
	public SCmd(String name, String usage, String[] aliases, Integer[] usernameIndices, SCon consumer) {
		this.name = name;
		this.usage = usage;
		this.aliases = aliases == null ? null : Arrays.asList(aliases);
		this.consumer = consumer;
		this.usernameIndices = usernameIndices == null ? null : Arrays.asList(usernameIndices);
		ClientCommandHandler.instance.registerCommand(this);
	}
	
	@Override
	public int compareTo(Object o) {
		return 0;
	}

	@Override
	public String getCommandName() {
		return this.name;
	}

	@Override
	public String getCommandUsage(ICommandSender sender) {
		return this.usage;
	}

	@Override
	public List<String> getCommandAliases() {
		return this.aliases;
	}

	@Override
	public void processCommand(ICommandSender sender, String[] args) {
		new Thread(() -> {
			try {
				this.consumer.accept(args);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}).start();
	}

	@Override
	public boolean canCommandSenderUseCommand(ICommandSender sender) {
		return true;
	}

	// TODO:
	@Override
	public List<String> addTabCompletionOptions(ICommandSender sender, String[] args) {
		return null;
	}

	@Override
	public boolean isUsernameIndex(String[] args, int index) {
		return this.usernameIndices.contains(index);
	}
}
