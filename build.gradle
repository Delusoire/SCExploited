import java.util.Base64/*
import java.util.stream.*
import java.nio.file.*

Path path = Paths.get(System.getProperty("user.dir"), "src/main/java/Main.java")
Files.write(path, Files.lines(path).map(line -> line.replaceAll("@NAME@", modName)
                                                    .replaceAll("@MODID@", Base64.getUrlEncoder().encodeToString(modName.getBytes()))
                                                    .replaceAll("@VERSION@", modVer)
)).collect(Collectors.toList()))
*/

buildscript {
 
  repositories {
    maven {
      name = "forge"
      url = "https://files.minecraftforge.net/maven"
    }
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath("net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT")
  }
}

apply plugin: "forge"

group = modGroup
version = "$modVer-$channel+mc$gameVer"
archivesBaseName = modName

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
  sourceCompatibility = targetCompatibility = "1.8"
}

/*
afterEvaluate {
  tasks.sourceMainJava.replace '@MOD_VERSION@', project.version
  tasks.sourceMainJava.replace '@MC_VERSION@', "[ ${project.minecraft.version} ]"
}*/

minecraft {
  runDir = "run"
  version = "1.7.10-10.13.4.1614-1.7.10"
  mappings = "stable_12"

  replace("@NAME@": modName,
          "@MODID@": Base64.getUrlEncoder().encodeToString(modName.getBytes()),
          "@VERSION@": modVer)
  replaceIn("Main.java")
}

configurations {
  compile.extendsFrom(provided)
}

dependencies {
  compile 'com.github.oshi:oshi-core:5.6.0'
}

jar {
  from configurations.provided.collect {
    exclude 'LICENSE.txt'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
    it.isDirectory() ? it : zipTree(it)
  }
}